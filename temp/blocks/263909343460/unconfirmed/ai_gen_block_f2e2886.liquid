{% doc %}
  @prompt
    Create a customizable FAQ accordion section for product pages with expandable questions and answers. The section should allow merchants to add multiple FAQ items with question and answer fields that can be different for each product.
{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-faq-accordion-{{ ai_gen_id }} {
    width: 100%;
    max-width: {{ block.settings.max_width }}px;
    margin: {{ block.settings.section_spacing }}px auto;
    padding: 0 20px;
  }

  .ai-faq-accordion__title-{{ ai_gen_id }} {
    text-align: {{ block.settings.title_alignment }};
    font-size: {{ block.settings.title_size }}px;
    font-weight: {{ block.settings.title_weight }};
    color: {{ block.settings.title_color }};
    margin-bottom: {{ block.settings.title_spacing }}px;
  }

  .ai-faq-accordion__items-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: {{ block.settings.item_spacing }}px;
  }

  .ai-faq-accordion__item-{{ ai_gen_id }} {
    border: {{ block.settings.border_width }}px solid {{ block.settings.border_color }};
    border-radius: {{ block.settings.border_radius }}px;
    background-color: {{ block.settings.item_background }};
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .ai-faq-accordion__item-{{ ai_gen_id }}:hover {
    border-color: {{ block.settings.border_hover_color }};
  }

  .ai-faq-accordion__question-{{ ai_gen_id }} {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: {{ block.settings.question_padding }}px;
    background: none;
    border: none;
    text-align: left;
    cursor: pointer;
    font-size: {{ block.settings.question_size }}px;
    font-weight: {{ block.settings.question_weight }};
    color: {{ block.settings.question_color }};
    transition: color 0.3s ease;
  }

  .ai-faq-accordion__question-{{ ai_gen_id }}:hover {
    color: {{ block.settings.question_hover_color }};
  }

  .ai-faq-accordion__question-text-{{ ai_gen_id }} {
    flex: 1;
    padding-right: 20px;
  }

  .ai-faq-accordion__icon-{{ ai_gen_id }} {
    flex-shrink: 0;
    width: {{ block.settings.icon_size }}px;
    height: {{ block.settings.icon_size }}px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.3s ease;
  }

  .ai-faq-accordion__icon-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    stroke: {{ block.settings.icon_color }};
  }

  .ai-faq-accordion__item-{{ ai_gen_id }}.active .ai-faq-accordion__icon-{{ ai_gen_id }} {
    transform: rotate(180deg);
  }

  .ai-faq-accordion__answer-{{ ai_gen_id }} {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
  }

  .ai-faq-accordion__answer-content-{{ ai_gen_id }} {
    padding: 0 {{ block.settings.question_padding }}px {{ block.settings.question_padding }}px;
    font-size: {{ block.settings.answer_size }}px;
    line-height: 1.6;
    color: {{ block.settings.answer_color }};
  }

  .ai-faq-accordion__empty-state-{{ ai_gen_id }} {
    text-align: center;
    padding: 40px 20px;
    color: #999;
    font-size: 14px;
  }

  @media screen and (max-width: 749px) {
    .ai-faq-accordion__title-{{ ai_gen_id }} {
      font-size: calc({{ block.settings.title_size }}px * 0.8);
    }

    .ai-faq-accordion__question-{{ ai_gen_id }} {
      font-size: calc({{ block.settings.question_size }}px * 0.9);
      padding: {{ block.settings.question_padding | times: 0.8 }}px;
    }

    .ai-faq-accordion__answer-content-{{ ai_gen_id }} {
      font-size: calc({{ block.settings.answer_size }}px * 0.9);
      padding: 0 {{ block.settings.question_padding | times: 0.8 }}px {{ block.settings.question_padding | times: 0.8 }}px;
    }
  }
{% endstyle %}

<faq-accordion-{{ ai_gen_id }} class="ai-faq-accordion-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  {% if block.settings.section_title != blank %}
    <h2 class="ai-faq-accordion__title-{{ ai_gen_id }}">{{ block.settings.section_title }}</h2>
  {% endif %}

  {% assign has_faqs = false %}
  {% for i in (1..10) %}
    {% assign question_key = 'question_' | append: i %}
    {% assign answer_key = 'answer_' | append: i %}
    {% assign question = block.settings[question_key] %}
    {% assign answer = block.settings[answer_key] %}
    
    {% if question != blank %}
      {% assign has_faqs = true %}
      {% break %}
    {% endif %}
  {% endfor %}

  {% if has_faqs %}
    <div class="ai-faq-accordion__items-{{ ai_gen_id }}">
      {% for i in (1..10) %}
        {% assign question_key = 'question_' | append: i %}
        {% assign answer_key = 'answer_' | append: i %}
        {% assign question = block.settings[question_key] %}
        {% assign answer = block.settings[answer_key] %}
        
        {% if question != blank %}
          <div class="ai-faq-accordion__item-{{ ai_gen_id }}" data-faq-item>
            <button 
              class="ai-faq-accordion__question-{{ ai_gen_id }}"
              aria-expanded="false"
              data-faq-button
            >
              <span class="ai-faq-accordion__question-text-{{ ai_gen_id }}">{{ question }}</span>
              <span class="ai-faq-accordion__icon-{{ ai_gen_id }}">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <polyline points="6 9 12 15 18 9"></polyline>
                </svg>
              </span>
            </button>
            <div class="ai-faq-accordion__answer-{{ ai_gen_id }}" data-faq-answer>
              <div class="ai-faq-accordion__answer-content-{{ ai_gen_id }}">
                {{ answer }}
              </div>
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>
  {% else %}
    <div class="ai-faq-accordion__empty-state-{{ ai_gen_id }}">
      Add your first FAQ question and answer to get started
    </div>
  {% endif %}
</faq-accordion-{{ ai_gen_id }}>

<script>
  (function() {
    class FaqAccordion{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.items = this.querySelectorAll('[data-faq-item]');
        this.setupEventListeners();
      }

      setupEventListeners() {
        this.items.forEach((item) => {
          const button = item.querySelector('[data-faq-button]');
          const answer = item.querySelector('[data-faq-answer]');
          
          button.addEventListener('click', () => {
            const isActive = item.classList.contains('active');
            
            if (isActive) {
              this.closeItem(item, button, answer);
            } else {
              this.items.forEach((otherItem) => {
                if (otherItem !== item && otherItem.classList.contains('active')) {
                  const otherButton = otherItem.querySelector('[data-faq-button]');
                  const otherAnswer = otherItem.querySelector('[data-faq-answer]');
                  this.closeItem(otherItem, otherButton, otherAnswer);
                }
              });
              
              this.openItem(item, button, answer);
            }
          });
        });
      }

      openItem(item, button, answer) {
        item.classList.add('active');
        button.setAttribute('aria-expanded', 'true');
        answer.style.maxHeight = answer.scrollHeight + 'px';
      }

      closeItem(item, button, answer) {
        item.classList.remove('active');
        button.setAttribute('aria-expanded', 'false');
        answer.style.maxHeight = '0';
      }
    }

    customElements.define('faq-accordion-{{ ai_gen_id }}', FaqAccordion{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Product FAQ accordion",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Section settings"
    },
    {
      "type": "text",
      "id": "section_title",
      "label": "Section title",
      "default": "Frequently Asked Questions"
    },
    {
      "type": "range",
      "id": "max_width",
      "min": 400,
      "max": 1200,
      "step": 50,
      "unit": "px",
      "label": "Maximum width",
      "default": 800
    },
    {
      "type": "range",
      "id": "section_spacing",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Section spacing",
      "default": 40
    },
    {
      "type": "header",
      "content": "Title style"
    },
    {
      "type": "select",
      "id": "title_alignment",
      "label": "Alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Font size",
      "default": 28
    },
    {
      "type": "select",
      "id": "title_weight",
      "label": "Font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi-bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "700"
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "title_spacing",
      "min": 10,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Bottom spacing",
      "default": 30
    },
    {
      "type": "header",
      "content": "Item style"
    },
    {
      "type": "range",
      "id": "item_spacing",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Spacing between items",
      "default": 12
    },
    {
      "type": "color",
      "id": "item_background",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "border_width",
      "min": 0,
      "max": 5,
      "step": 1,
      "unit": "px",
      "label": "Border width",
      "default": 1
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "border_hover_color",
      "label": "Border hover color",
      "default": "#cccccc"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Question style"
    },
    {
      "type": "range",
      "id": "question_padding",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "question_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 16
    },
    {
      "type": "select",
      "id": "question_weight",
      "label": "Font weight",
      "options": [
        {
          "value": "400",
          "label": "Normal"
        },
        {
          "value": "500",
          "label": "Medium"
        },
        {
          "value": "600",
          "label": "Semi-bold"
        },
        {
          "value": "700",
          "label": "Bold"
        }
      ],
      "default": "600"
    },
    {
      "type": "color",
      "id": "question_color",
      "label": "Color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "question_hover_color",
      "label": "Hover color",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "Answer style"
    },
    {
      "type": "range",
      "id": "answer_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 14
    },
    {
      "type": "color",
      "id": "answer_color",
      "label": "Color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Icon style"
    },
    {
      "type": "range",
      "id": "icon_size",
      "min": 16,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Size",
      "default": 20
    },
    {
      "type": "color",
      "id": "icon_color",
      "label": "Color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "FAQ 1"
    },
    {
      "type": "text",
      "id": "question_1",
      "label": "Question"
    },
    {
      "type": "richtext",
      "id": "answer_1",
      "label": "Answer"
    },
    {
      "type": "header",
      "content": "FAQ 2"
    },
    {
      "type": "text",
      "id": "question_2",
      "label": "Question"
    },
    {
      "type": "richtext",
      "id": "answer_2",
      "label": "Answer"
    },
    {
      "type": "header",
      "content": "FAQ 3"
    },
    {
      "type": "text",
      "id": "question_3",
      "label": "Question"
    },
    {
      "type": "richtext",
      "id": "answer_3",
      "label": "Answer"
    },
    {
      "type": "header",
      "content": "FAQ 4"
    },
    {
      "type": "text",
      "id": "question_4",
      "label": "Question"
    },
    {
      "type": "richtext",
      "id": "answer_4",
      "label": "Answer"
    },
    {
      "type": "header",
      "content": "FAQ 5"
    },
    {
      "type": "text",
      "id": "question_5",
      "label": "Question"
    },
    {
      "type": "richtext",
      "id": "answer_5",
      "label": "Answer"
    },
    {
      "type": "header",
      "content": "FAQ 6"
    },
    {
      "type": "text",
      "id": "question_6",
      "label": "Question"
    },
    {
      "type": "richtext",
      "id": "answer_6",
      "label": "Answer"
    },
    {
      "type": "header",
      "content": "FAQ 7"
    },
    {
      "type": "text",
      "id": "question_7",
      "label": "Question"
    },
    {
      "type": "richtext",
      "id": "answer_7",
      "label": "Answer"
    },
    {
      "type": "header",
      "content": "FAQ 8"
    },
    {
      "type": "text",
      "id": "question_8",
      "label": "Question"
    },
    {
      "type": "richtext",
      "id": "answer_8",
      "label": "Answer"
    },
    {
      "type": "header",
      "content": "FAQ 9"
    },
    {
      "type": "text",
      "id": "question_9",
      "label": "Question"
    },
    {
      "type": "richtext",
      "id": "answer_9",
      "label": "Answer"
    },
    {
      "type": "header",
      "content": "FAQ 10"
    },
    {
      "type": "text",
      "id": "question_10",
      "label": "Question"
    },
    {
      "type": "richtext",
      "id": "answer_10",
      "label": "Answer"
    }
  ],
  "presets": [
    {
      "name": "Product FAQ accordion"
    }
  ]
}
{% endschema %}